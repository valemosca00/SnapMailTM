name: Update GitHub Secrets with Azure Function Keys

on:
  workflow_dispatch: # Avvio manuale

jobs:
  update-secrets:
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      # Checkout del repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Login ad Azure
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Recupero degli endpoint e delle chiavi delle Azure Functions
      - name: Retrieve Azure Function Keys and Endpoints
        id: retrieve-secrets
        run: |
          echo "Recupero degli endpoint e delle chiavi per le Azure Functions..."

          # Definizione delle variabili
            FUNCTION_APP_NAME="SnapMailFuncApp"
            RESOURCE_GROUP="SnapMailGroup"

          # Recupero dell'URL base della Function App
          FUNCTION_APP_URL=$(az functionapp show \
            --name $FUNCTION_APP_NAME \
            --resource-group $RESOURCE_GROUP \
            --query "defaultHostName" -o tsv)
          echo "Function App URL: $FUNCTION_APP_URL"

          # Funzione generate_email
          GENERATE_EMAIL_KEY=$(az functionapp function keys list \
            --function-name generate_email \
            --name $FUNCTION_APP_NAME \
            --resource-group $RESOURCE_GROUP \
            --query "default" -o tsv)
          echo "Generate Email Key: $GENERATE_EMAIL_KEY"

          # Funzione load_inbox
          LOAD_INBOX_KEY=$(az functionapp function keys list \
            --function-name load_inbox \
            --name $FUNCTION_APP_NAME \
            --resource-group $RESOURCE_GROUP \
            --query "default" -o tsv)
          echo "Load Inbox Key: $LOAD_INBOX_KEY"

          # Funzione check_email
          CHECK_EMAIL_KEY=$(az functionapp function keys list \
            --function-name check_email \
            --name $FUNCTION_APP_NAME \
            --resource-group $RESOURCE_GROUP \
            --query "default" -o tsv)
          echo "Check Email Key: $CHECK_EMAIL_KEY"

          # Funzione delete_email
          DELETE_EMAIL_KEY=$(az functionapp function keys list \
            --function-name delete_email \
            --name $FUNCTION_APP_NAME \
            --resource-group $RESOURCE_GROUP \
            --query "default" -o tsv)
          echo "Delete Email Key: $DELETE_EMAIL_KEY"

          # Combinazione degli endpoint con le chiavi
          FUNCTION_LOAD_INBOX="https://$FUNCTION_APP_URL/api/load_inbox?code=$LOAD_INBOX_KEY"
          FUNCTION_DELETE_EMAIL="https://$FUNCTION_APP_URL/api/delete_email?code=$DELETE_EMAIL_KEY"
          FUNCTION_GENERATE_EMAIL="https://$FUNCTION_APP_URL/api/generate_email?code=$GENERATE_EMAIL_KEY"
          FUNCTION_CHECK_EMAIL="https://$FUNCTION_APP_URL/api/check_email?code=$CHECK_EMAIL_KEY"

          echo "::set-output name=function_load_inbox::$FUNCTION_LOAD_INBOX"
          echo "::set-output name=function_delete_email::$FUNCTION_DELETE_EMAIL"
          echo "::set-output name=function_generate_email::$FUNCTION_GENERATE_EMAIL"
          echo "::set-output name=function_check_email::$FUNCTION_CHECK_EMAIL"

      # Aggiornamento delle secret su GitHub
      - name: Update GitHub Secrets
        id: update-secrets
        env:
          GH_TOKEN: ${{ secrets.UPDATE_SECRETS }} # Usa il PAT come variabile di ambiente
        run: |                
          # Creazione delle secret
          gh secret set LOAD_INBOX_ENDPOINT --body "${{ steps.retrieve-secrets.outputs.function_load_inbox }}"
          gh secret set DELETE_EMAIL_ENDPOINT --body "${{ steps.retrieve-secrets.outputs.function_delete_email }}"
          gh secret set GENERATE_EMAIL_ENDPOINT --body "${{ steps.retrieve-secrets.outputs.function_generate_email }}"
          gh secret set CHECK_EMAIL_ENDPOINT --body "${{ steps.retrieve-secrets.outputs.function_check_email }}"

      - name: Confirm Secrets Update
        run: |
          echo "Le secrets sono state aggiornate correttamente."

      